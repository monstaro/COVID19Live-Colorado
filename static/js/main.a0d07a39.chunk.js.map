{"version":3,"sources":["components/Welcome/Welcome.js","components/Header/Header.js","components/Sidebar/Sidebar.js","components/Nav/Nav.js","components/Footer/Footer.js","components/About/About.js","components/StayingProtected/StayingProtected.js","components/CountyData/CountyData.js","containers/Bookmarks/Bookmarks.js","apiCalls.js","components/CountyDropdown/CountyDropdown.js","containers/LocalHealth/LocalHealth.js","actions/index.js","containers/CountyStatsContainer/CountyStatsContainer.js","containers/App/App.js","serviceWorker.js","reducers/index.js","reducers/countiesList.js","reducers/healthDepts.js","reducers/countyDeaths.js","reducers/bookmarks.js","index.js"],"names":["Welcome","className","data-testid","Header","Sidebar","addActiveClass","e","setState","currentPage","target","id","determineIfActive","section","state","to","onClick","this","Component","Nav","Footer","alt","href","rel","About","StayingProtected","CountyData","props","countyPop","countyName","cases","deaths","lastUpdate","makeTable","connect","bookmarks","length","map","bookmark","key","request","require","csv","fetchCounties","a","fetch","response","json","data","filteredData","features","entries","County_Population","properties","County_Pos_Cases","FULL_","fetchHealthDepts","item","name","fetchCountyDeaths","countyDeaths","fromStream","get","subscribe","push","entry","county","date","b","CountyDropdown","disableFirstVal","countyNames","selectCounty","makeDropdown","sort","value","onChange","disabled","LocalHealth","componentDidMount","then","loadHealthDepts","catch","err","console","error","message","getCountyNames","counties","depts","find","countyObject","firstDropdownDisabled","displayDeptInfo","phone","website","twitter","facebook","healthDepts","dispatch","type","CountyStats","bookmarkBtnTxt","returnCurrentCountyInfo","findCounty","filter","split","parseInt","removeBookmark","saveBookmark","hidden","toggleBookmark","countiesList","App","loadCounties","loadCountyDeaths","path","exact","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","router","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0d07a39.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Welcome.scss\";\n\nconst Welcome = () => {\n  return (\n    <div className=\"welcome-container\" data-testid=\"welcome-container\">\n      <h2 className=\"welcome-header\">Welcome to CovidLive Colorado</h2>\n      <section className=\"welcome-description\">\n        <p>\n          Our mission is to bring at-risk residents of Colorado the most\n          up-to-date information for their county.\n        </p>\n        Here you can find tips to stay protected, locate your local health\n        department, and view live COVID-19 stats for any county in Colorado.\n      </section>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header-container\" data-testid=\"header-container\">\n      <section className=\"title\">\n        <section className=\"covid-live\">CovidLive</section>\n        <section className=\"colorado\">Colorado</section>\n      </section>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./Sidebar.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n  constructor() {\n    super()\n    this.state = {\n      currentPage: null\n    }\n  }\n  addActiveClass = (e) => {\n    this.setState({\n      currentPage: e.target.id\n    })\n  }\n  determineIfActive = (section) => {\n    if (section === this.state.currentPage) {\n      return section + ' active-link'\n    } else {\n      return section + ' inactive-link'\n    }\n  }\n  render() { \n    return (\n      <div className=\"sidebar-container\" data-testid=\"sidebar-container\">\n        <ul className=\"sidebar-links\">\n          <NavLink to=\"/about\">\n            <li onClick={(e) => this.addActiveClass(e)} id='about' className={this.determineIfActive('about')} data-testid=\"about\">About</li>\n          </NavLink>\n          <NavLink to=\"/staying-protected\">\n            <li onClick={(e) => this.addActiveClass(e)} id='staying-protected' className={this.determineIfActive('staying-protected')} data-testid=\"staying-protected\">Staying Protected</li>\n          </NavLink>\n          <NavLink to=\"/local-health\">\n            <li onClick={(e) => this.addActiveClass(e)} id='local-health' className={this.determineIfActive('local-health')} data-testid=\"local-health\">Your County Health Department</li>\n          </NavLink>\n          <NavLink to=\"/county-stats\">\n            <li onClick={(e) => this.addActiveClass(e)} id='county-stats' className={this.determineIfActive('county-stats')} data-testid=\"county-stats\">Live County Stats</li>\n          </NavLink>\n          <NavLink to=\"bookmarks\">\n            <li onClick={(e) => this.addActiveClass(e)} id='bookmarked-counties' className={this.determineIfActive('bookmarked-counties')} data-testid=\"bookmarked-counties\">Bookmarked Counties</li>\n          </NavLink>\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Nav.scss\";\n\nconst Nav = () => {\n  return (\n    <div className=\"nav-container\" data-testid=\"nav-container\">\n      <section className=\"site-description\">\n        <section>A COVID-19 resource for at-risk Colorado residents.</section>\n        Providing live updates on all Colorado counties.\n      </section>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\" data-testid=\"footer-container\">\n      <span className=\"copyright-symbol\">&copy;</span>\n      <span className=\"copyright\">\n        2020{\" \"}\n        <a\n          alt=\"link to github\"\n          className=\"github-link\"\n          href=\"https://github.com/monstaro\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Cody Smith\n        </a>\n      </span>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about-container\" data-testid=\"about-container\">\n      <h2 className=\"about-header\">About CovidLive</h2>\n      <p>\n        CovidLive CO is a tool to help you track the spread of Covid-19 (Coronavirus) across the state of Colorado. At-risk populations\n        may use this to determine hotspots to avoid, and find local health department contact information. \n      </p>\n      <p>\n        We source our information from the New York Times, CDPHE Live Open Data, and State County Health Departments API by Postman. \n      </p>  \n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./StayingProtected.scss\";\n\nconst StayingProtected = () => {\n  return (\n    <div\n      className=\"staying-protected-container\"\n      data-testid=\"staying-protected-container\"\n    >\n      <h2 className=\"staying-protected-header\">Staying Protected</h2>\n      <p>\n        Here are some links to government-sponsored sites with all the information you need to stay protected:\n      </p>\n      <a\n          alt=\"Consumer Product Safety Commission\"\n          className=\"link\"\n          href=\"https://www.cpsc.gov/Safety-Education/Safety-Education-Centers/covid-19-home-safety\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          CPSC COVID-19 Home Safty Page\n        </a>\n        <a\n          alt=\"Pandemic Resources & Information\"\n          className=\"link\"\n          href=\"https://www.api.org/news-policy-and-issues/pandemic-information\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Pandemic Resources & Information by API Energy\n        </a>\n    </div>\n  );\n};\n\nexport default StayingProtected;\n","import React, { Component } from \"react\";\nimport \"./CountyData.scss\";\nimport PropTypes from 'prop-types';\n\nclass CountyData extends Component {\n  makeTable() {\n    if (this.props.countyPop) {\n      return (\n        <div>\n          <h4>{this.props.countyName}</h4>\n          <table>\n            <thead>\n              <tr>\n                <th>Positive Cases</th>\n                <th>Fatalities</th>\n                <th>County Population</th>\n              </tr>\n            </thead>\n            <thead>\n              <tr>\n                <td>{this.props.cases}</td>\n                <td>{this.props.deaths}</td>\n                <td>{this.props.countyPop}</td>\n              </tr>\n            </thead>\n          </table>\n          Last Update {this.props.lastUpdate}\n        </div>\n      );\n    } else {\n      return \"\";\n    }\n  };\n  render() {\n    return (\n      <div\n        data-testid=\"county-data-container\"\n        className=\"county-data-container\"\n      >\n        {this.makeTable()}\n      </div>\n    );\n  }\n}\n\nexport default CountyData;\n\nCountyData.propTypes = {\n  deaths: PropTypes.number,\n  cases: PropTypes.number,\n  countyPop: PropTypes.number,\n  countyName: PropTypes.string,\n  lastUpdate: PropTypes.string\n}","import React from \"react\";\nimport \"./Bookmarks.scss\";\nimport { connect } from \"react-redux\";\nimport CountyData from \"../../components/CountyData/CountyData\";\nimport PropTypes from 'prop-types';\n\nconst Bookmarks = (props) => {\n  if (props.bookmarks.length) {\n    return (\n      <div className=\"bookmarks-container\" data-testid=\"bookmarks-container\">\n        <h2 className=\"bookmarks-header\">Bookmarks</h2>\n        {props.bookmarks.map((bookmark) => (\n          <CountyData\n            key={bookmark.countyName}\n            deaths={bookmark.deaths}\n            cases={bookmark.cases}\n            countyPop={bookmark.countyPop}\n            countyName={bookmark.countyName}\n          />\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"bookmarks-container\" data-testid=\"bookmarks-container\">\n        <h2 className=\"bookmarks-header\">Bookmarks</h2>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  bookmarks: state.bookmarks,\n});\n\nexport default connect(mapStateToProps)(Bookmarks);\n\nBookmarks.propTypes = {\n  className: PropTypes.string,\n  bookmarks: PropTypes.array,\n  dispatcj: PropTypes.func,\n}","const request = require(\"request\");\nconst csv = require(\"csvtojson\");\n\nexport const fetchCounties = async () => {\n  const response = await fetch(\n    \"https://opendata.arcgis.com/datasets/fbae539746324ca69ff34f086286845b_0.geojson\"\n  );\n  const data = await response.json();\n  const filteredData = data.features.map((entries) => ({\n    \n    County_Population: entries.properties.County_Population,\n    County_Pos_Cases: entries.properties.County_Pos_Cases,\n    FULL_: entries.properties.FULL_,\n  }));\n  return filteredData;\n};\n\nexport const fetchHealthDepts = async () => {\n  const response = await fetch(\n    \"https://postman-data-api-templates.github.io/county-health-departments/api/colorado.json\"\n  );\n  const data = await response.json();\n  data.map((item) => {\n    if (item.name === \"City and County of Denver\") {\n      item.name = \"Denver County\";\n    }\n    if (item.name === \"City and County of Broomfield\") {\n      item.name = \"Broomfield County\";\n    }\n  });\n  return data;\n};\n\nexport const fetchCountyDeaths = async () => {\n  const countyDeaths = [];\n  await csv()\n    .fromStream(\n      request.get(\n        \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\n      )\n    )\n    .subscribe((json) => {\n      if (json.state === \"Colorado\") {\n        countyDeaths.push(json);\n      }\n    });\n  const a = await countyDeaths;\n  const b = await a.map((entry) => ({\n    cases: entry.cases,\n    county: entry.county,\n    date: entry.date,\n    deaths: entry.deaths,\n  }));\n  return b;\n};\n","import React from 'react';\nimport './CountyDropdown.scss';\nimport PropTypes from 'prop-types';\n\nconst CountyDropdown = ({disableFirstVal, countyNames, selectCounty}) => {\n    const makeDropdown = () => {\n       return countyNames.sort().map(county => {\n        return <option data-testid={county} value={county} key={county + 'key'}>{county}</option>\n        })\n    }\n    if (makeDropdown()) {\n        return (\n           <div data-testid=\"county-dropdown-container\">\n               <select onChange={(e) => selectCounty(e.target.value)} id=\"counties\">\n               <option disabled={disableFirstVal}  value='default' key='default'>Click here</option>\n                   {makeDropdown()}\n               </select>\n           </div> \n        )\n    } else {\n        return (\n            <div data-testid=\"county-dropdown-container\">\n                \n            </div>\n        )\n    }\n}\n\nexport default CountyDropdown\n\nCountyDropdown.propTypes = {\n    disableFirstVal: PropTypes.bool,\n    countyNames: PropTypes.array,\n    selectCounty: PropTypes.func,\n  }","import React, { Component } from \"react\";\nimport \"./LocalHealth.scss\";\nimport { fetchHealthDepts } from \"../../apiCalls\";\nimport { loadHealthDepts } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport CountyDropdown from \"../../components/CountyDropdown/CountyDropdown\";\nimport PropTypes from 'prop-types';\n\nclass LocalHealth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      county: null,\n      firstDropdownDisabled: false,\n    };\n  }\n  componentDidMount = () => {\n    fetchHealthDepts()\n      .then((data) => this.props.loadHealthDepts(data))\n      .catch((err) => console.error(err.message));\n  };\n  getCountyNames = () => {\n    let counties;\n    if (this.props.depts.length) {\n      counties = this.props.depts.map((county) => {\n        return county.name;\n      });\n    }\n    return counties;\n  };\n  selectCounty = (county) => {\n    if (county !== \"default\") {\n      this.setState({\n        county: this.props.depts.find(\n          (countyObject) => countyObject.name === county\n        ),\n        firstDropdownDisabled: true,\n      });\n    } else {\n      return;\n    }\n  };\n  displayDeptInfo = () => {\n    if (this.state.county) {\n      return (\n        <div data-testid=\"dept-info\">\n          <p>{this.state.county.name}</p>\n          <p>{this.state.county.phone}</p>\n          <p>\n            <a\n              alt=\"county health dept website\"\n              href={this.state.county.website}\n            >\n              Website\n            </a>\n          </p>\n\n          {this.state.county.twitter ? (\n            <p>\n              <a alt=\"twitter\" href={this.state.county.twitter}>\n                Twitter\n              </a>\n            </p>\n          ) : (\n            \"\"\n          )}\n          {this.state.county.facebook ? (\n            <p>\n              <a alt=\"facebook\" href={this.state.county.facebook}>\n                Facebook\n              </a>\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    } else {\n      return <div data-testid=\"dept-info\">\n\n      </div>;\n    }\n  };\n  render() {\n    if (this.props.depts.length) {\n      return (\n        <div\n          className=\"local-health-container\"\n          data-testid=\"local-health-container\"\n        >\n          <h2 className=\"local-health-header\">Local Health Depts</h2>\n          <h3 className=\"\">Select your county below:</h3>\n          <section className=\"county-picker\">\n            <CountyDropdown\n              disableFirstVal={this.state.firstDropdownDisabled}\n              countyNames={this.getCountyNames()}\n              selectCounty={(county) => this.selectCounty(county)}\n            />\n          </section>\n          {this.displayDeptInfo()}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className=\"local-health-container\"\n          data-testid=\"local-health-container\"\n        >\n          <h2 className=\"local-health-header\">Local Health Depts</h2>\n          <h3 className=\"\">Select your county below:</h3>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    depts: state.healthDepts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadHealthDepts: (healthDepts) => dispatch(loadHealthDepts(healthDepts)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalHealth);\n\nLocalHealth.propTypes = {\n  className: PropTypes.string,\n  depts: PropTypes.array,\n  loadHealthDepts: PropTypes.func\n}","export const loadCounties = counties => ({\n    type: 'LOAD_COUNTIES',\n    counties\n})\n\nexport const loadHealthDepts = healthDepts => ({\n    type: 'LOAD_HEALTH_DEPTS',\n    healthDepts\n})\n\nexport const loadCountyDeaths = countyDeaths => ({\n    type: 'LOAD_COUNTY_DEATHS',\n    countyDeaths\n})\n\nexport const saveBookmark = bookmark => ({\n    type: 'SAVE_BOOKMARK',\n    bookmark\n})\n\nexport const removeBookmark = bookmark => ({\n    type: 'REMOVE_BOOKMARK',\n    bookmark\n})","import React, { Component } from \"react\";\nimport \"./CountyStatsContainer.scss\";\nimport { connect } from \"react-redux\";\nimport CountyDropdown from \"../../components/CountyDropdown/CountyDropdown\";\nimport CountyData from \"../../components/CountyData/CountyData\";\nimport { saveBookmark, removeBookmark } from \"../../actions\";\nimport PropTypes from \"prop-types\";\n\nclass CountyStats extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countyName: null,\n      deaths: null,\n      cases: null,\n      countyPop: null,\n      firstDropdownDisabled: false,\n      bookmarkBtnTxt: \"Add To Bookmarks\",\n    };\n  }\n  getCountyNames() {\n    let counties;\n    if (this.props.counties.length) {\n      counties = this.props.counties.map((county) => {\n        return county.FULL_;\n      });\n    }\n    return counties;\n  }\n  selectCounty(county) {\n    if (county !== \"default\") {\n      this.setState(\n        {\n          countyName:\n            this.props.counties.find(\n              (countyObject) => countyObject.FULL_ === county\n            ).FULL_ + \":\",\n          deaths: this.returnCurrentCountyInfo(county, 'deaths'),\n          date: this.props.countyDeaths[this.props.countyDeaths.length - 1].date,\n          cases: this.props.counties.find(\n            (countyObject) => countyObject.FULL_ === county\n          ).County_Pos_Cases,\n          countyPop: this.props.counties.find(\n            (countyObject) => countyObject.FULL_ === county\n          ).County_Population,\n          firstDropdownDisabled: true,\n        },\n        () => {\n          this.setState({\n            bookmarkBtnTxt: this.props.bookmarks.find(\n              (bookmark) => bookmark.countyName === this.state.countyName\n            )\n              ? \"Remove From Bookmarks\"\n              : \"Add To Bookmarks\",\n          });\n        }\n      );\n    } else {\n      return;\n    }\n  }\n  returnCurrentCountyInfo(county, type) {\n    let findCounty = this.props.countyDeaths.filter(\n      (entry) => entry.county === county.split(\" \")[0]\n    );\n    let b = findCounty[findCounty.length - 1];\n    if (b) {\n      return parseInt(b[type]);\n    } else {\n      return 0;\n    }\n  }\n  toggleBookmark() {\n    if (\n      this.props.bookmarks.find(\n        (bookmark) => bookmark.countyName === this.state.countyName\n      )\n    ) {\n      this.props.removeBookmark(this.state);\n      this.setState({\n        bookmarkBtnTxt: \"Add To Bookmarks\",\n      });\n    } else {\n      this.props.saveBookmark(this.state);\n      this.setState({\n        bookmarkBtnTxt: \"Remove From Bookmarks\",\n      });\n    }\n  }\n  render() {\n    if (this.props.counties.length) {\n      return (\n        <div\n          className=\"county-stats-container\"\n          data-testid=\"county-stats-container\"\n        >\n          <h2 className=\"county-stats-header\">County Stats</h2>\n          <h3 className=\"county-stats-subheader\">Select A County Below</h3>\n          <section className=\"county-picker\">\n            <CountyDropdown\n              disableFirstVal={this.state.firstDropdownDisabled}\n              countyNames={this.getCountyNames()}\n              selectCounty={(county) => this.selectCounty(county)}\n            />\n          </section>\n          <CountyData\n            deaths={this.state.deaths}\n            cases={this.state.cases}\n            countyPop={this.state.countyPop}\n            countyName={this.state.countyName}\n            lastUpdate={this.state.date}\n          />\n          <button\n            hidden={!this.state.countyName}\n            onClick={() => this.toggleBookmark()}\n            className=\"bookmark-btn\"\n          >\n            {this.state.bookmarkBtnTxt}\n          </button>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className=\"county-stats-container\"\n          data-testid=\"county-stats-container\"\n        >\n          <h2 className=\"county-stats-header\">County Stats</h2>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  counties: state.countiesList,\n  countyDeaths: state.countyDeaths,\n  bookmarks: state.bookmarks,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveBookmark: (bookmark) => dispatch(saveBookmark(bookmark)),\n  removeBookmark: (bookmark) => dispatch(removeBookmark(bookmark)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountyStats);\n\nCountyStats.propTypes = {\n  className: PropTypes.string,\n  counties: PropTypes.array,\n  countyDeaths: PropTypes.array,\n  bookmarks: PropTypes.array,\n  saveBookmark: PropTypes.func,\n  removeBookmark: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"../../components/Welcome/Welcome\";\nimport Header from \"../../components/Header/Header\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Nav from \"../../components/Nav/Nav\";\nimport Footer from \"../../components/Footer/Footer\";\nimport About from \"../../components/About/About\";\nimport StayingProtected from \"../../components/StayingProtected/StayingProtected\";\nimport Bookmarks from \"../Bookmarks/Bookmarks\";\nimport LocalHealth from \"../LocalHealth/LocalHealth\";\nimport CountyStatsContainer from \"../CountyStatsContainer/CountyStatsContainer\";\nimport { loadCounties, loadCountyDeaths } from \"../../actions\";\nimport { fetchCounties, fetchCountyDeaths } from \"../../apiCalls\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    fetchCounties()\n      .then((data) => this.props.loadCounties(data))\n      .catch((err) => console.error(err.message));\n    fetchCountyDeaths().then((data) => this.props.loadCountyDeaths(data));\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header className=\"header\" />\n        <Nav className=\"nav\" />\n        <Sidebar className=\"sidebar\" />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={() => <Welcome className=\"main-area\" />}\n          />\n        </Switch>\n        <Route\n          path=\"/about\"\n          exact\n          component={() => <About className=\"main-area\" />}\n        />\n        <Route\n          path=\"/staying-protected\"\n          exact\n          component={() => <StayingProtected className=\"main-area\" />}\n        />\n        <Route\n          path=\"/county-stats\"\n          exact\n          component={() => <CountyStatsContainer className=\"main-area\" />}\n        />\n        <Route\n          path=\"/bookmarks\"\n          exact\n          component={() => <Bookmarks className=\"main-area\" />}\n        />\n        <Route\n          path=\"/local-health\"\n          exact\n          component={() => <LocalHealth className=\"main-area\" />}\n        />\n        <Route path=\"/welcome\" exact component={() => <Welcome />} />\n        <Footer className=\"footer\" />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadCounties: (counties) => dispatch(loadCounties(counties)),\n  loadCountyDeaths: (countyDeaths) => dispatch(loadCountyDeaths(countyDeaths)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { countiesList } from './countiesList';\nimport { healthDepts } from './healthDepts';\nimport { countyDeaths } from './countyDeaths';\nimport { bookmarks } from './bookmarks'\n\n\nconst rootReducer = combineReducers({\n    countiesList,\n    healthDepts,\n    countyDeaths,\n    bookmarks\n})\n\nexport default rootReducer","export const countiesList = (state=[], action) => {\n    switch (action.type) {\n        case 'LOAD_COUNTIES':\n        return [...state, ...action.counties]\n        default:\n            return state;\n    }\n}","export const healthDepts = (state = [], action) => {\n  switch (action.type) {\n    case \"LOAD_HEALTH_DEPTS\":\n      return [...state, ...action.healthDepts];\n    default:\n      return state;\n  }\n};\n","export const countyDeaths = (state=[], action) => {\n    switch (action.type) {\n        case 'LOAD_COUNTY_DEATHS':\n        return [...state, ...action.countyDeaths]\n        default:\n            return state;\n    }\n}","export const bookmarks = (state=[], action) => {\n    switch (action.type) {\n        case 'SAVE_BOOKMARK':\n        return [...state, action.bookmark]\n        case 'REMOVE_BOOKMARK':\n        return [...state.filter(entry => (entry.countyName !== action.bookmark.countyName))]\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools());\nconst router = <BrowserRouter><App></App></BrowserRouter>\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      {router}\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}